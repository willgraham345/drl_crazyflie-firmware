/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_KALMAN_CORE_H
#define _MOCK_KALMAN_CORE_H

#include "kalman_core.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_kalman_core_Init(void);
void mock_kalman_core_Destroy(void);
void mock_kalman_core_Verify(void);




#define kalmanCoreDefaultParams_Ignore() kalmanCoreDefaultParams_CMockIgnore()
void kalmanCoreDefaultParams_CMockIgnore(void);
#define kalmanCoreDefaultParams_Expect(params) kalmanCoreDefaultParams_CMockExpect(__LINE__, params)
void kalmanCoreDefaultParams_CMockExpect(UNITY_LINE_TYPE cmock_line, kalmanCoreParams_t* params);
typedef void (* CMOCK_kalmanCoreDefaultParams_CALLBACK)(kalmanCoreParams_t* params, int cmock_num_calls);
void kalmanCoreDefaultParams_StubWithCallback(CMOCK_kalmanCoreDefaultParams_CALLBACK Callback);
#define kalmanCoreDefaultParams_ExpectWithArray(params, params_Depth) kalmanCoreDefaultParams_CMockExpectWithArray(__LINE__, params, params_Depth)
void kalmanCoreDefaultParams_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, kalmanCoreParams_t* params, int params_Depth);
#define kalmanCoreDefaultParams_IgnoreArg_params() kalmanCoreDefaultParams_CMockIgnoreArg_params(__LINE__)
void kalmanCoreDefaultParams_CMockIgnoreArg_params(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreInit_Ignore() kalmanCoreInit_CMockIgnore()
void kalmanCoreInit_CMockIgnore(void);
#define kalmanCoreInit_Expect(this, params, nowMs) kalmanCoreInit_CMockExpect(__LINE__, this, params, nowMs)
void kalmanCoreInit_CMockExpect(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, const kalmanCoreParams_t* params, const uint32_t nowMs);
typedef void (* CMOCK_kalmanCoreInit_CALLBACK)(kalmanCoreData_t* this, const kalmanCoreParams_t* params, const uint32_t nowMs, int cmock_num_calls);
void kalmanCoreInit_StubWithCallback(CMOCK_kalmanCoreInit_CALLBACK Callback);
#define kalmanCoreInit_ExpectWithArray(this, this_Depth, params, params_Depth, nowMs) kalmanCoreInit_CMockExpectWithArray(__LINE__, this, this_Depth, params, params_Depth, nowMs)
void kalmanCoreInit_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, int this_Depth, const kalmanCoreParams_t* params, int params_Depth, const uint32_t nowMs);
#define kalmanCoreInit_IgnoreArg_this() kalmanCoreInit_CMockIgnoreArg_this(__LINE__)
void kalmanCoreInit_CMockIgnoreArg_this(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreInit_IgnoreArg_params() kalmanCoreInit_CMockIgnoreArg_params(__LINE__)
void kalmanCoreInit_CMockIgnoreArg_params(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreInit_IgnoreArg_nowMs() kalmanCoreInit_CMockIgnoreArg_nowMs(__LINE__)
void kalmanCoreInit_CMockIgnoreArg_nowMs(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreUpdateWithBaro_Ignore() kalmanCoreUpdateWithBaro_CMockIgnore()
void kalmanCoreUpdateWithBaro_CMockIgnore(void);
#define kalmanCoreUpdateWithBaro_Expect(this, params, baroAsl, quadIsFlying) kalmanCoreUpdateWithBaro_CMockExpect(__LINE__, this, params, baroAsl, quadIsFlying)
void kalmanCoreUpdateWithBaro_CMockExpect(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, const kalmanCoreParams_t* params, float baroAsl, bool quadIsFlying);
typedef void (* CMOCK_kalmanCoreUpdateWithBaro_CALLBACK)(kalmanCoreData_t* this, const kalmanCoreParams_t* params, float baroAsl, bool quadIsFlying, int cmock_num_calls);
void kalmanCoreUpdateWithBaro_StubWithCallback(CMOCK_kalmanCoreUpdateWithBaro_CALLBACK Callback);
#define kalmanCoreUpdateWithBaro_ExpectWithArray(this, this_Depth, params, params_Depth, baroAsl, quadIsFlying) kalmanCoreUpdateWithBaro_CMockExpectWithArray(__LINE__, this, this_Depth, params, params_Depth, baroAsl, quadIsFlying)
void kalmanCoreUpdateWithBaro_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, int this_Depth, const kalmanCoreParams_t* params, int params_Depth, float baroAsl, bool quadIsFlying);
#define kalmanCoreUpdateWithBaro_IgnoreArg_this() kalmanCoreUpdateWithBaro_CMockIgnoreArg_this(__LINE__)
void kalmanCoreUpdateWithBaro_CMockIgnoreArg_this(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreUpdateWithBaro_IgnoreArg_params() kalmanCoreUpdateWithBaro_CMockIgnoreArg_params(__LINE__)
void kalmanCoreUpdateWithBaro_CMockIgnoreArg_params(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreUpdateWithBaro_IgnoreArg_baroAsl() kalmanCoreUpdateWithBaro_CMockIgnoreArg_baroAsl(__LINE__)
void kalmanCoreUpdateWithBaro_CMockIgnoreArg_baroAsl(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreUpdateWithBaro_IgnoreArg_quadIsFlying() kalmanCoreUpdateWithBaro_CMockIgnoreArg_quadIsFlying(__LINE__)
void kalmanCoreUpdateWithBaro_CMockIgnoreArg_quadIsFlying(UNITY_LINE_TYPE cmock_line);
#define kalmanCorePredict_Ignore() kalmanCorePredict_CMockIgnore()
void kalmanCorePredict_CMockIgnore(void);
#define kalmanCorePredict_Expect(this, acc, gyro, nowMs, quadIsFlying) kalmanCorePredict_CMockExpect(__LINE__, this, acc, gyro, nowMs, quadIsFlying)
void kalmanCorePredict_CMockExpect(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, Axis3f* acc, Axis3f* gyro, const uint32_t nowMs, bool quadIsFlying);
typedef void (* CMOCK_kalmanCorePredict_CALLBACK)(kalmanCoreData_t* this, Axis3f* acc, Axis3f* gyro, const uint32_t nowMs, bool quadIsFlying, int cmock_num_calls);
void kalmanCorePredict_StubWithCallback(CMOCK_kalmanCorePredict_CALLBACK Callback);
#define kalmanCorePredict_ExpectWithArray(this, this_Depth, acc, acc_Depth, gyro, gyro_Depth, nowMs, quadIsFlying) kalmanCorePredict_CMockExpectWithArray(__LINE__, this, this_Depth, acc, acc_Depth, gyro, gyro_Depth, nowMs, quadIsFlying)
void kalmanCorePredict_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, int this_Depth, Axis3f* acc, int acc_Depth, Axis3f* gyro, int gyro_Depth, const uint32_t nowMs, bool quadIsFlying);
#define kalmanCorePredict_IgnoreArg_this() kalmanCorePredict_CMockIgnoreArg_this(__LINE__)
void kalmanCorePredict_CMockIgnoreArg_this(UNITY_LINE_TYPE cmock_line);
#define kalmanCorePredict_IgnoreArg_acc() kalmanCorePredict_CMockIgnoreArg_acc(__LINE__)
void kalmanCorePredict_CMockIgnoreArg_acc(UNITY_LINE_TYPE cmock_line);
#define kalmanCorePredict_IgnoreArg_gyro() kalmanCorePredict_CMockIgnoreArg_gyro(__LINE__)
void kalmanCorePredict_CMockIgnoreArg_gyro(UNITY_LINE_TYPE cmock_line);
#define kalmanCorePredict_IgnoreArg_nowMs() kalmanCorePredict_CMockIgnoreArg_nowMs(__LINE__)
void kalmanCorePredict_CMockIgnoreArg_nowMs(UNITY_LINE_TYPE cmock_line);
#define kalmanCorePredict_IgnoreArg_quadIsFlying() kalmanCorePredict_CMockIgnoreArg_quadIsFlying(__LINE__)
void kalmanCorePredict_CMockIgnoreArg_quadIsFlying(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreAddProcessNoise_Ignore() kalmanCoreAddProcessNoise_CMockIgnore()
void kalmanCoreAddProcessNoise_CMockIgnore(void);
#define kalmanCoreAddProcessNoise_Expect(this, params, nowMs) kalmanCoreAddProcessNoise_CMockExpect(__LINE__, this, params, nowMs)
void kalmanCoreAddProcessNoise_CMockExpect(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, const kalmanCoreParams_t* params, const uint32_t nowMs);
typedef void (* CMOCK_kalmanCoreAddProcessNoise_CALLBACK)(kalmanCoreData_t* this, const kalmanCoreParams_t* params, const uint32_t nowMs, int cmock_num_calls);
void kalmanCoreAddProcessNoise_StubWithCallback(CMOCK_kalmanCoreAddProcessNoise_CALLBACK Callback);
#define kalmanCoreAddProcessNoise_ExpectWithArray(this, this_Depth, params, params_Depth, nowMs) kalmanCoreAddProcessNoise_CMockExpectWithArray(__LINE__, this, this_Depth, params, params_Depth, nowMs)
void kalmanCoreAddProcessNoise_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, int this_Depth, const kalmanCoreParams_t* params, int params_Depth, const uint32_t nowMs);
#define kalmanCoreAddProcessNoise_IgnoreArg_this() kalmanCoreAddProcessNoise_CMockIgnoreArg_this(__LINE__)
void kalmanCoreAddProcessNoise_CMockIgnoreArg_this(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreAddProcessNoise_IgnoreArg_params() kalmanCoreAddProcessNoise_CMockIgnoreArg_params(__LINE__)
void kalmanCoreAddProcessNoise_CMockIgnoreArg_params(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreAddProcessNoise_IgnoreArg_nowMs() kalmanCoreAddProcessNoise_CMockIgnoreArg_nowMs(__LINE__)
void kalmanCoreAddProcessNoise_CMockIgnoreArg_nowMs(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreFinalize_IgnoreAndReturn(cmock_retval) kalmanCoreFinalize_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void kalmanCoreFinalize_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define kalmanCoreFinalize_ExpectAndReturn(this, cmock_retval) kalmanCoreFinalize_CMockExpectAndReturn(__LINE__, this, cmock_retval)
void kalmanCoreFinalize_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, bool cmock_to_return);
typedef bool (* CMOCK_kalmanCoreFinalize_CALLBACK)(kalmanCoreData_t* this, int cmock_num_calls);
void kalmanCoreFinalize_StubWithCallback(CMOCK_kalmanCoreFinalize_CALLBACK Callback);
#define kalmanCoreFinalize_ExpectWithArrayAndReturn(this, this_Depth, cmock_retval) kalmanCoreFinalize_CMockExpectWithArrayAndReturn(__LINE__, this, this_Depth, cmock_retval)
void kalmanCoreFinalize_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, int this_Depth, bool cmock_to_return);
#define kalmanCoreFinalize_IgnoreArg_this() kalmanCoreFinalize_CMockIgnoreArg_this(__LINE__)
void kalmanCoreFinalize_CMockIgnoreArg_this(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreExternalizeState_Ignore() kalmanCoreExternalizeState_CMockIgnore()
void kalmanCoreExternalizeState_CMockIgnore(void);
#define kalmanCoreExternalizeState_Expect(this, state, acc) kalmanCoreExternalizeState_CMockExpect(__LINE__, this, state, acc)
void kalmanCoreExternalizeState_CMockExpect(UNITY_LINE_TYPE cmock_line, const kalmanCoreData_t* this, state_t* state, const Axis3f* acc);
typedef void (* CMOCK_kalmanCoreExternalizeState_CALLBACK)(const kalmanCoreData_t* this, state_t* state, const Axis3f* acc, int cmock_num_calls);
void kalmanCoreExternalizeState_StubWithCallback(CMOCK_kalmanCoreExternalizeState_CALLBACK Callback);
#define kalmanCoreExternalizeState_ExpectWithArray(this, this_Depth, state, state_Depth, acc, acc_Depth) kalmanCoreExternalizeState_CMockExpectWithArray(__LINE__, this, this_Depth, state, state_Depth, acc, acc_Depth)
void kalmanCoreExternalizeState_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, const kalmanCoreData_t* this, int this_Depth, state_t* state, int state_Depth, const Axis3f* acc, int acc_Depth);
#define kalmanCoreExternalizeState_IgnoreArg_this() kalmanCoreExternalizeState_CMockIgnoreArg_this(__LINE__)
void kalmanCoreExternalizeState_CMockIgnoreArg_this(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreExternalizeState_IgnoreArg_state() kalmanCoreExternalizeState_CMockIgnoreArg_state(__LINE__)
void kalmanCoreExternalizeState_CMockIgnoreArg_state(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreExternalizeState_IgnoreArg_acc() kalmanCoreExternalizeState_CMockIgnoreArg_acc(__LINE__)
void kalmanCoreExternalizeState_CMockIgnoreArg_acc(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreDecoupleXY_Ignore() kalmanCoreDecoupleXY_CMockIgnore()
void kalmanCoreDecoupleXY_CMockIgnore(void);
#define kalmanCoreDecoupleXY_Expect(this) kalmanCoreDecoupleXY_CMockExpect(__LINE__, this)
void kalmanCoreDecoupleXY_CMockExpect(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this);
typedef void (* CMOCK_kalmanCoreDecoupleXY_CALLBACK)(kalmanCoreData_t* this, int cmock_num_calls);
void kalmanCoreDecoupleXY_StubWithCallback(CMOCK_kalmanCoreDecoupleXY_CALLBACK Callback);
#define kalmanCoreDecoupleXY_ExpectWithArray(this, this_Depth) kalmanCoreDecoupleXY_CMockExpectWithArray(__LINE__, this, this_Depth)
void kalmanCoreDecoupleXY_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, int this_Depth);
#define kalmanCoreDecoupleXY_IgnoreArg_this() kalmanCoreDecoupleXY_CMockIgnoreArg_this(__LINE__)
void kalmanCoreDecoupleXY_CMockIgnoreArg_this(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreScalarUpdate_Ignore() kalmanCoreScalarUpdate_CMockIgnore()
void kalmanCoreScalarUpdate_CMockIgnore(void);
#define kalmanCoreScalarUpdate_Expect(this, Hm, error, stdMeasNoise) kalmanCoreScalarUpdate_CMockExpect(__LINE__, this, Hm, error, stdMeasNoise)
void kalmanCoreScalarUpdate_CMockExpect(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, arm_matrix_instance_f32* Hm, float error, float stdMeasNoise);
typedef void (* CMOCK_kalmanCoreScalarUpdate_CALLBACK)(kalmanCoreData_t* this, arm_matrix_instance_f32* Hm, float error, float stdMeasNoise, int cmock_num_calls);
void kalmanCoreScalarUpdate_StubWithCallback(CMOCK_kalmanCoreScalarUpdate_CALLBACK Callback);
#define kalmanCoreScalarUpdate_ExpectWithArray(this, this_Depth, Hm, Hm_Depth, error, stdMeasNoise) kalmanCoreScalarUpdate_CMockExpectWithArray(__LINE__, this, this_Depth, Hm, Hm_Depth, error, stdMeasNoise)
void kalmanCoreScalarUpdate_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, int this_Depth, arm_matrix_instance_f32* Hm, int Hm_Depth, float error, float stdMeasNoise);
#define kalmanCoreScalarUpdate_IgnoreArg_this() kalmanCoreScalarUpdate_CMockIgnoreArg_this(__LINE__)
void kalmanCoreScalarUpdate_CMockIgnoreArg_this(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreScalarUpdate_IgnoreArg_Hm() kalmanCoreScalarUpdate_CMockIgnoreArg_Hm(__LINE__)
void kalmanCoreScalarUpdate_CMockIgnoreArg_Hm(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreScalarUpdate_IgnoreArg_error() kalmanCoreScalarUpdate_CMockIgnoreArg_error(__LINE__)
void kalmanCoreScalarUpdate_CMockIgnoreArg_error(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreScalarUpdate_IgnoreArg_stdMeasNoise() kalmanCoreScalarUpdate_CMockIgnoreArg_stdMeasNoise(__LINE__)
void kalmanCoreScalarUpdate_CMockIgnoreArg_stdMeasNoise(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreUpdateWithPKE_Ignore() kalmanCoreUpdateWithPKE_CMockIgnore()
void kalmanCoreUpdateWithPKE_CMockIgnore(void);
#define kalmanCoreUpdateWithPKE_Expect(this, Hm, Km, P_w_m, error) kalmanCoreUpdateWithPKE_CMockExpect(__LINE__, this, Hm, Km, P_w_m, error)
void kalmanCoreUpdateWithPKE_CMockExpect(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, arm_matrix_instance_f32* Hm, arm_matrix_instance_f32* Km, arm_matrix_instance_f32* P_w_m, float error);
typedef void (* CMOCK_kalmanCoreUpdateWithPKE_CALLBACK)(kalmanCoreData_t* this, arm_matrix_instance_f32* Hm, arm_matrix_instance_f32* Km, arm_matrix_instance_f32* P_w_m, float error, int cmock_num_calls);
void kalmanCoreUpdateWithPKE_StubWithCallback(CMOCK_kalmanCoreUpdateWithPKE_CALLBACK Callback);
#define kalmanCoreUpdateWithPKE_ExpectWithArray(this, this_Depth, Hm, Hm_Depth, Km, Km_Depth, P_w_m, P_w_m_Depth, error) kalmanCoreUpdateWithPKE_CMockExpectWithArray(__LINE__, this, this_Depth, Hm, Hm_Depth, Km, Km_Depth, P_w_m, P_w_m_Depth, error)
void kalmanCoreUpdateWithPKE_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, kalmanCoreData_t* this, int this_Depth, arm_matrix_instance_f32* Hm, int Hm_Depth, arm_matrix_instance_f32* Km, int Km_Depth, arm_matrix_instance_f32* P_w_m, int P_w_m_Depth, float error);
#define kalmanCoreUpdateWithPKE_IgnoreArg_this() kalmanCoreUpdateWithPKE_CMockIgnoreArg_this(__LINE__)
void kalmanCoreUpdateWithPKE_CMockIgnoreArg_this(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreUpdateWithPKE_IgnoreArg_Hm() kalmanCoreUpdateWithPKE_CMockIgnoreArg_Hm(__LINE__)
void kalmanCoreUpdateWithPKE_CMockIgnoreArg_Hm(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreUpdateWithPKE_IgnoreArg_Km() kalmanCoreUpdateWithPKE_CMockIgnoreArg_Km(__LINE__)
void kalmanCoreUpdateWithPKE_CMockIgnoreArg_Km(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreUpdateWithPKE_IgnoreArg_P_w_m() kalmanCoreUpdateWithPKE_CMockIgnoreArg_P_w_m(__LINE__)
void kalmanCoreUpdateWithPKE_CMockIgnoreArg_P_w_m(UNITY_LINE_TYPE cmock_line);
#define kalmanCoreUpdateWithPKE_IgnoreArg_error() kalmanCoreUpdateWithPKE_CMockIgnoreArg_error(__LINE__)
void kalmanCoreUpdateWithPKE_CMockIgnoreArg_error(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
