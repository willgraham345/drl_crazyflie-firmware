/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_USEC_TIME_H
#define _MOCK_USEC_TIME_H

#include "usec_time.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_usec_time_Init(void);
void mock_usec_time_Destroy(void);
void mock_usec_time_Verify(void);




#define initUsecTimer_Ignore() initUsecTimer_CMockIgnore()
void initUsecTimer_CMockIgnore(void);
#define initUsecTimer_Expect() initUsecTimer_CMockExpect(__LINE__)
void initUsecTimer_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_initUsecTimer_CALLBACK)(int cmock_num_calls);
void initUsecTimer_StubWithCallback(CMOCK_initUsecTimer_CALLBACK Callback);
#define usecTimestamp_IgnoreAndReturn(cmock_retval) usecTimestamp_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void usecTimestamp_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint64_t cmock_to_return);
#define usecTimestamp_ExpectAndReturn(cmock_retval) usecTimestamp_CMockExpectAndReturn(__LINE__, cmock_retval)
void usecTimestamp_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint64_t cmock_to_return);
typedef uint64_t (* CMOCK_usecTimestamp_CALLBACK)(int cmock_num_calls);
void usecTimestamp_StubWithCallback(CMOCK_usecTimestamp_CALLBACK Callback);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
