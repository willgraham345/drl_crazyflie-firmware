/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_LIGHTHOUSE_THROTTLE_H
#define _MOCK_LIGHTHOUSE_THROTTLE_H

#include "lighthouse_throttle.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_lighthouse_throttle_Init(void);
void mock_lighthouse_throttle_Destroy(void);
void mock_lighthouse_throttle_Verify(void);




#define throttleLh2Samples_IgnoreAndReturn(cmock_retval) throttleLh2Samples_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void throttleLh2Samples_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define throttleLh2Samples_ExpectAndReturn(now_ms, cmock_retval) throttleLh2Samples_CMockExpectAndReturn(__LINE__, now_ms, cmock_retval)
void throttleLh2Samples_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const uint32_t now_ms, bool cmock_to_return);
typedef bool (* CMOCK_throttleLh2Samples_CALLBACK)(const uint32_t now_ms, int cmock_num_calls);
void throttleLh2Samples_StubWithCallback(CMOCK_throttleLh2Samples_CALLBACK Callback);
#define throttleLh2Samples_IgnoreArg_now_ms() throttleLh2Samples_CMockIgnoreArg_now_ms(__LINE__)
void throttleLh2Samples_CMockIgnoreArg_now_ms(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
