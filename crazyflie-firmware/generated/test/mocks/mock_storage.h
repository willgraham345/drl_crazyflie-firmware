/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_STORAGE_H
#define _MOCK_STORAGE_H

#include "storage.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_storage_Init(void);
void mock_storage_Destroy(void);
void mock_storage_Verify(void);




#define storageInit_Ignore() storageInit_CMockIgnore()
void storageInit_CMockIgnore(void);
#define storageInit_Expect() storageInit_CMockExpect(__LINE__)
void storageInit_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_storageInit_CALLBACK)(int cmock_num_calls);
void storageInit_StubWithCallback(CMOCK_storageInit_CALLBACK Callback);
#define storageTest_IgnoreAndReturn(cmock_retval) storageTest_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void storageTest_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define storageTest_ExpectAndReturn(cmock_retval) storageTest_CMockExpectAndReturn(__LINE__, cmock_retval)
void storageTest_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
typedef bool (* CMOCK_storageTest_CALLBACK)(int cmock_num_calls);
void storageTest_StubWithCallback(CMOCK_storageTest_CALLBACK Callback);
#define storageStore_IgnoreAndReturn(cmock_retval) storageStore_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void storageStore_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define storageStore_ExpectAndReturn(key, buffer, length, cmock_retval) storageStore_CMockExpectAndReturn(__LINE__, key, buffer, length, cmock_retval)
void storageStore_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* key, const void* buffer, size_t length, bool cmock_to_return);
typedef bool (* CMOCK_storageStore_CALLBACK)(const char* key, const void* buffer, size_t length, int cmock_num_calls);
void storageStore_StubWithCallback(CMOCK_storageStore_CALLBACK Callback);
#define storageStore_ExpectWithArrayAndReturn(key, buffer, buffer_Depth, length, cmock_retval) storageStore_CMockExpectWithArrayAndReturn(__LINE__, key, buffer, buffer_Depth, length, cmock_retval)
void storageStore_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const char* key, const void* buffer, int buffer_Depth, size_t length, bool cmock_to_return);
#define storageStore_IgnoreArg_key() storageStore_CMockIgnoreArg_key(__LINE__)
void storageStore_CMockIgnoreArg_key(UNITY_LINE_TYPE cmock_line);
#define storageStore_IgnoreArg_buffer() storageStore_CMockIgnoreArg_buffer(__LINE__)
void storageStore_CMockIgnoreArg_buffer(UNITY_LINE_TYPE cmock_line);
#define storageStore_IgnoreArg_length() storageStore_CMockIgnoreArg_length(__LINE__)
void storageStore_CMockIgnoreArg_length(UNITY_LINE_TYPE cmock_line);
#define storageFetch_IgnoreAndReturn(cmock_retval) storageFetch_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void storageFetch_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, size_t cmock_to_return);
#define storageFetch_ExpectAndReturn(key, buffer, length, cmock_retval) storageFetch_CMockExpectAndReturn(__LINE__, key, buffer, length, cmock_retval)
void storageFetch_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* key, void* buffer, size_t length, size_t cmock_to_return);
typedef size_t (* CMOCK_storageFetch_CALLBACK)(const char* key, void* buffer, size_t length, int cmock_num_calls);
void storageFetch_StubWithCallback(CMOCK_storageFetch_CALLBACK Callback);
#define storageFetch_ExpectWithArrayAndReturn(key, buffer, buffer_Depth, length, cmock_retval) storageFetch_CMockExpectWithArrayAndReturn(__LINE__, key, buffer, buffer_Depth, length, cmock_retval)
void storageFetch_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const char* key, void* buffer, int buffer_Depth, size_t length, size_t cmock_to_return);
#define storageFetch_IgnoreArg_key() storageFetch_CMockIgnoreArg_key(__LINE__)
void storageFetch_CMockIgnoreArg_key(UNITY_LINE_TYPE cmock_line);
#define storageFetch_IgnoreArg_buffer() storageFetch_CMockIgnoreArg_buffer(__LINE__)
void storageFetch_CMockIgnoreArg_buffer(UNITY_LINE_TYPE cmock_line);
#define storageFetch_IgnoreArg_length() storageFetch_CMockIgnoreArg_length(__LINE__)
void storageFetch_CMockIgnoreArg_length(UNITY_LINE_TYPE cmock_line);
#define storageDelete_IgnoreAndReturn(cmock_retval) storageDelete_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void storageDelete_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define storageDelete_ExpectAndReturn(key, cmock_retval) storageDelete_CMockExpectAndReturn(__LINE__, key, cmock_retval)
void storageDelete_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* key, bool cmock_to_return);
typedef bool (* CMOCK_storageDelete_CALLBACK)(const char* key, int cmock_num_calls);
void storageDelete_StubWithCallback(CMOCK_storageDelete_CALLBACK Callback);
#define storageDelete_IgnoreArg_key() storageDelete_CMockIgnoreArg_key(__LINE__)
void storageDelete_CMockIgnoreArg_key(UNITY_LINE_TYPE cmock_line);
#define storageForeach_IgnoreAndReturn(cmock_retval) storageForeach_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void storageForeach_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define storageForeach_ExpectAndReturn(prefix, func, cmock_retval) storageForeach_CMockExpectAndReturn(__LINE__, prefix, func, cmock_retval)
void storageForeach_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const char* prefix, storageFunc_t func, bool cmock_to_return);
typedef bool (* CMOCK_storageForeach_CALLBACK)(const char* prefix, storageFunc_t func, int cmock_num_calls);
void storageForeach_StubWithCallback(CMOCK_storageForeach_CALLBACK Callback);
#define storageForeach_IgnoreArg_prefix() storageForeach_CMockIgnoreArg_prefix(__LINE__)
void storageForeach_CMockIgnoreArg_prefix(UNITY_LINE_TYPE cmock_line);
#define storageForeach_IgnoreArg_func() storageForeach_CMockIgnoreArg_func(__LINE__)
void storageForeach_CMockIgnoreArg_func(UNITY_LINE_TYPE cmock_line);
#define storagePrintStats_Ignore() storagePrintStats_CMockIgnore()
void storagePrintStats_CMockIgnore(void);
#define storagePrintStats_Expect() storagePrintStats_CMockExpect(__LINE__)
void storagePrintStats_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_storagePrintStats_CALLBACK)(int cmock_num_calls);
void storagePrintStats_StubWithCallback(CMOCK_storagePrintStats_CALLBACK Callback);
#define storageReformat_IgnoreAndReturn(cmock_retval) storageReformat_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void storageReformat_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define storageReformat_ExpectAndReturn(cmock_retval) storageReformat_CMockExpectAndReturn(__LINE__, cmock_retval)
void storageReformat_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
typedef bool (* CMOCK_storageReformat_CALLBACK)(int cmock_num_calls);
void storageReformat_StubWithCallback(CMOCK_storageReformat_CALLBACK Callback);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
