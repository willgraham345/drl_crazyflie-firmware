/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_CRC32_H
#define _MOCK_CRC32_H

#include "crc32.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_crc32_Init(void);
void mock_crc32_Destroy(void);
void mock_crc32_Verify(void);




#define crc32ContextInit_Ignore() crc32ContextInit_CMockIgnore()
void crc32ContextInit_CMockIgnore(void);
#define crc32ContextInit_Expect(context) crc32ContextInit_CMockExpect(__LINE__, context)
void crc32ContextInit_CMockExpect(UNITY_LINE_TYPE cmock_line, crc32Context_t* context);
typedef void (* CMOCK_crc32ContextInit_CALLBACK)(crc32Context_t* context, int cmock_num_calls);
void crc32ContextInit_StubWithCallback(CMOCK_crc32ContextInit_CALLBACK Callback);
#define crc32ContextInit_ExpectWithArray(context, context_Depth) crc32ContextInit_CMockExpectWithArray(__LINE__, context, context_Depth)
void crc32ContextInit_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, crc32Context_t* context, int context_Depth);
#define crc32ContextInit_IgnoreArg_context() crc32ContextInit_CMockIgnoreArg_context(__LINE__)
void crc32ContextInit_CMockIgnoreArg_context(UNITY_LINE_TYPE cmock_line);
#define crc32Update_Ignore() crc32Update_CMockIgnore()
void crc32Update_CMockIgnore(void);
#define crc32Update_Expect(context, data, size) crc32Update_CMockExpect(__LINE__, context, data, size)
void crc32Update_CMockExpect(UNITY_LINE_TYPE cmock_line, crc32Context_t* context, const void* data, size_t size);
typedef void (* CMOCK_crc32Update_CALLBACK)(crc32Context_t* context, const void* data, size_t size, int cmock_num_calls);
void crc32Update_StubWithCallback(CMOCK_crc32Update_CALLBACK Callback);
#define crc32Update_ExpectWithArray(context, context_Depth, data, data_Depth, size) crc32Update_CMockExpectWithArray(__LINE__, context, context_Depth, data, data_Depth, size)
void crc32Update_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, crc32Context_t* context, int context_Depth, const void* data, int data_Depth, size_t size);
#define crc32Update_IgnoreArg_context() crc32Update_CMockIgnoreArg_context(__LINE__)
void crc32Update_CMockIgnoreArg_context(UNITY_LINE_TYPE cmock_line);
#define crc32Update_IgnoreArg_data() crc32Update_CMockIgnoreArg_data(__LINE__)
void crc32Update_CMockIgnoreArg_data(UNITY_LINE_TYPE cmock_line);
#define crc32Update_IgnoreArg_size() crc32Update_CMockIgnoreArg_size(__LINE__)
void crc32Update_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);
#define crc32Out_IgnoreAndReturn(cmock_retval) crc32Out_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void crc32Out_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define crc32Out_ExpectAndReturn(context, cmock_retval) crc32Out_CMockExpectAndReturn(__LINE__, context, cmock_retval)
void crc32Out_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const crc32Context_t* context, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_crc32Out_CALLBACK)(const crc32Context_t* context, int cmock_num_calls);
void crc32Out_StubWithCallback(CMOCK_crc32Out_CALLBACK Callback);
#define crc32Out_ExpectWithArrayAndReturn(context, context_Depth, cmock_retval) crc32Out_CMockExpectWithArrayAndReturn(__LINE__, context, context_Depth, cmock_retval)
void crc32Out_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const crc32Context_t* context, int context_Depth, uint32_t cmock_to_return);
#define crc32Out_IgnoreArg_context() crc32Out_CMockIgnoreArg_context(__LINE__)
void crc32Out_CMockIgnoreArg_context(UNITY_LINE_TYPE cmock_line);
#define crc32CalculateBuffer_IgnoreAndReturn(cmock_retval) crc32CalculateBuffer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void crc32CalculateBuffer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint32_t cmock_to_return);
#define crc32CalculateBuffer_ExpectAndReturn(buffer, size, cmock_retval) crc32CalculateBuffer_CMockExpectAndReturn(__LINE__, buffer, size, cmock_retval)
void crc32CalculateBuffer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const void* buffer, size_t size, uint32_t cmock_to_return);
typedef uint32_t (* CMOCK_crc32CalculateBuffer_CALLBACK)(const void* buffer, size_t size, int cmock_num_calls);
void crc32CalculateBuffer_StubWithCallback(CMOCK_crc32CalculateBuffer_CALLBACK Callback);
#define crc32CalculateBuffer_ExpectWithArrayAndReturn(buffer, buffer_Depth, size, cmock_retval) crc32CalculateBuffer_CMockExpectWithArrayAndReturn(__LINE__, buffer, buffer_Depth, size, cmock_retval)
void crc32CalculateBuffer_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, const void* buffer, int buffer_Depth, size_t size, uint32_t cmock_to_return);
#define crc32CalculateBuffer_IgnoreArg_buffer() crc32CalculateBuffer_CMockIgnoreArg_buffer(__LINE__)
void crc32CalculateBuffer_CMockIgnoreArg_buffer(UNITY_LINE_TYPE cmock_line);
#define crc32CalculateBuffer_IgnoreArg_size() crc32CalculateBuffer_CMockIgnoreArg_size(__LINE__)
void crc32CalculateBuffer_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
