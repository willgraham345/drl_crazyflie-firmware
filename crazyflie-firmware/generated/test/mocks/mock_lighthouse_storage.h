/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_LIGHTHOUSE_STORAGE_H
#define _MOCK_LIGHTHOUSE_STORAGE_H

#include "lighthouse_storage.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_lighthouse_storage_Init(void);
void mock_lighthouse_storage_Destroy(void);
void mock_lighthouse_storage_Verify(void);




#define lighthouseStoragePersistData_IgnoreAndReturn(cmock_retval) lighthouseStoragePersistData_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void lighthouseStoragePersistData_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define lighthouseStoragePersistData_ExpectAndReturn(baseStation, geoData, calibData, cmock_retval) lighthouseStoragePersistData_CMockExpectAndReturn(__LINE__, baseStation, geoData, calibData, cmock_retval)
void lighthouseStoragePersistData_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const uint8_t baseStation, const bool geoData, const bool calibData, bool cmock_to_return);
typedef bool (* CMOCK_lighthouseStoragePersistData_CALLBACK)(const uint8_t baseStation, const bool geoData, const bool calibData, int cmock_num_calls);
void lighthouseStoragePersistData_StubWithCallback(CMOCK_lighthouseStoragePersistData_CALLBACK Callback);
#define lighthouseStoragePersistData_IgnoreArg_baseStation() lighthouseStoragePersistData_CMockIgnoreArg_baseStation(__LINE__)
void lighthouseStoragePersistData_CMockIgnoreArg_baseStation(UNITY_LINE_TYPE cmock_line);
#define lighthouseStoragePersistData_IgnoreArg_geoData() lighthouseStoragePersistData_CMockIgnoreArg_geoData(__LINE__)
void lighthouseStoragePersistData_CMockIgnoreArg_geoData(UNITY_LINE_TYPE cmock_line);
#define lighthouseStoragePersistData_IgnoreArg_calibData() lighthouseStoragePersistData_CMockIgnoreArg_calibData(__LINE__)
void lighthouseStoragePersistData_CMockIgnoreArg_calibData(UNITY_LINE_TYPE cmock_line);
#define lighthouseStoragePersistCalibDataBackground_Ignore() lighthouseStoragePersistCalibDataBackground_CMockIgnore()
void lighthouseStoragePersistCalibDataBackground_CMockIgnore(void);
#define lighthouseStoragePersistCalibDataBackground_Expect(baseStation) lighthouseStoragePersistCalibDataBackground_CMockExpect(__LINE__, baseStation)
void lighthouseStoragePersistCalibDataBackground_CMockExpect(UNITY_LINE_TYPE cmock_line, const uint8_t baseStation);
typedef void (* CMOCK_lighthouseStoragePersistCalibDataBackground_CALLBACK)(const uint8_t baseStation, int cmock_num_calls);
void lighthouseStoragePersistCalibDataBackground_StubWithCallback(CMOCK_lighthouseStoragePersistCalibDataBackground_CALLBACK Callback);
#define lighthouseStoragePersistCalibDataBackground_IgnoreArg_baseStation() lighthouseStoragePersistCalibDataBackground_CMockIgnoreArg_baseStation(__LINE__)
void lighthouseStoragePersistCalibDataBackground_CMockIgnoreArg_baseStation(UNITY_LINE_TYPE cmock_line);
#define lighthouseStoragePersistSystemType_Ignore() lighthouseStoragePersistSystemType_CMockIgnore()
void lighthouseStoragePersistSystemType_CMockIgnore(void);
#define lighthouseStoragePersistSystemType_Expect(type) lighthouseStoragePersistSystemType_CMockExpect(__LINE__, type)
void lighthouseStoragePersistSystemType_CMockExpect(UNITY_LINE_TYPE cmock_line, lighthouseBaseStationType_t type);
typedef void (* CMOCK_lighthouseStoragePersistSystemType_CALLBACK)(lighthouseBaseStationType_t type, int cmock_num_calls);
void lighthouseStoragePersistSystemType_StubWithCallback(CMOCK_lighthouseStoragePersistSystemType_CALLBACK Callback);
#define lighthouseStoragePersistSystemType_IgnoreArg_type() lighthouseStoragePersistSystemType_CMockIgnoreArg_type(__LINE__)
void lighthouseStoragePersistSystemType_CMockIgnoreArg_type(UNITY_LINE_TYPE cmock_line);
#define lighthouseStorageVerifySetStorageVersion_Ignore() lighthouseStorageVerifySetStorageVersion_CMockIgnore()
void lighthouseStorageVerifySetStorageVersion_CMockIgnore(void);
#define lighthouseStorageVerifySetStorageVersion_Expect() lighthouseStorageVerifySetStorageVersion_CMockExpect(__LINE__)
void lighthouseStorageVerifySetStorageVersion_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_lighthouseStorageVerifySetStorageVersion_CALLBACK)(int cmock_num_calls);
void lighthouseStorageVerifySetStorageVersion_StubWithCallback(CMOCK_lighthouseStorageVerifySetStorageVersion_CALLBACK Callback);
#define lighthouseStorageInitializeGeoDataFromStorage_Ignore() lighthouseStorageInitializeGeoDataFromStorage_CMockIgnore()
void lighthouseStorageInitializeGeoDataFromStorage_CMockIgnore(void);
#define lighthouseStorageInitializeGeoDataFromStorage_Expect() lighthouseStorageInitializeGeoDataFromStorage_CMockExpect(__LINE__)
void lighthouseStorageInitializeGeoDataFromStorage_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_lighthouseStorageInitializeGeoDataFromStorage_CALLBACK)(int cmock_num_calls);
void lighthouseStorageInitializeGeoDataFromStorage_StubWithCallback(CMOCK_lighthouseStorageInitializeGeoDataFromStorage_CALLBACK Callback);
#define lighthouseStorageInitializeCalibDataFromStorage_Ignore() lighthouseStorageInitializeCalibDataFromStorage_CMockIgnore()
void lighthouseStorageInitializeCalibDataFromStorage_CMockIgnore(void);
#define lighthouseStorageInitializeCalibDataFromStorage_Expect() lighthouseStorageInitializeCalibDataFromStorage_CMockExpect(__LINE__)
void lighthouseStorageInitializeCalibDataFromStorage_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_lighthouseStorageInitializeCalibDataFromStorage_CALLBACK)(int cmock_num_calls);
void lighthouseStorageInitializeCalibDataFromStorage_StubWithCallback(CMOCK_lighthouseStorageInitializeCalibDataFromStorage_CALLBACK Callback);
#define lighthouseStorageInitializeSystemTypeFromStorage_Ignore() lighthouseStorageInitializeSystemTypeFromStorage_CMockIgnore()
void lighthouseStorageInitializeSystemTypeFromStorage_CMockIgnore(void);
#define lighthouseStorageInitializeSystemTypeFromStorage_Expect() lighthouseStorageInitializeSystemTypeFromStorage_CMockExpect(__LINE__)
void lighthouseStorageInitializeSystemTypeFromStorage_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_lighthouseStorageInitializeSystemTypeFromStorage_CALLBACK)(int cmock_num_calls);
void lighthouseStorageInitializeSystemTypeFromStorage_StubWithCallback(CMOCK_lighthouseStorageInitializeSystemTypeFromStorage_CALLBACK Callback);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
